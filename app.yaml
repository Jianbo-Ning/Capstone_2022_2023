env: standard
runtime: python38

# PRODUCTION SERVER ENTRYPOINT
# This states the entrypoint for running the backend. First, it changes to the "server folder" and
# then it uses gunicorn on Port#8080 (required port) to run api.py
entrypoint: gunicorn -b :8080 --chdir ./server api:app

# WARNING!!! YOU MUST CREATE env_variables.yaml AND POPULATE IT WITH YOUR PROJECT'S ENVIRONMENTAL VARIABLES.
# You can find mentions of these environmental variables at the top of each Python file.
# Alternatively, you could use Google Secrets or another service to hide credentials.
# Assumptions: The postgres database is hosted on G Cloud SQL and is part of the App Engine project.
# Note: In .yaml files, enclose variable strings in ' '.
# ______________________________[BEGIN SAMPLE env_variables.yaml]
# env_variables:
#   DB_INSTANCE: 'YOUR_PROJECT_NAME:YOUR_PROJECT_DB_REGION:YOUR_PROJECT_DB_NAME'
#   DB_HOST: '/cloudsql/YOUR_PROJECT_NAME:YOUR_PROJECT_DB_REGION:YOUR_PROJECT_DB_NAME/'
#   DB_IP: 'YOUR_DB_IP'
#   DB_PORT: 5432
#   DB_USER: 'postgres'
#   DB_PASSWORD: 'YOUR_PASSWORD_GOES_HERE'
#   DATABASE_NAME: 'postgres'
#   AUTH_DOMAIN: 'YOUR_AUTH0_DOMAIN'
#   AUTH_CLIENT_ID: 'YOUR_AUTH0_CLIENT_ID'
#   AUTH_CLIENT_SECRET: 'YOUR_AUTH0_CLIENT_SECRET'
#   AUTH_ALGORITHMS: [ "RS256" ]
#   AUTH_SCOPE: "read:users"
#   API_CLIENT_ID: 'YOUR_AUTH0_API_CLIENT_ID'
#   API_CLIENT_SECRET: 'YOUR_AUTH0_API_CLIENT_SECRET'
#   API_AUDIENCE: 'YOUR_AUTH0_API_AUDIENCE'
# ______________________________[End Sample]
includes:
  - env_variables.yaml

handlers:
  # FRONTEND HANDLER
  # "url" is a regular expression; if the user types anything into the browser in the pattern {domain}/, this triggers.
  # "static_files" tells it which files should be served when this regular expression is matched.
  # "upload" tells gcloud which files to upload corresponding to static_files - in this case, it's the same.
  # This directs {domain}/ to the following FILE (touches ONE FILE).
  - url: /
    static_files: frontend/build/index.html
    upload: frontend/build/index.html

  # "url" is the prefix "/" + any characters (.*) + "." (\.) + any characters (.*)
  # This code instructs the application to substitute this prefix after "frontend/build/"
  # Ex: Browser wants {domain}/css/main.css; the prefix is "/" + "css/main" (any characters) + "." + "css" (any characters)
  # It will get the file found at frontend/build/{above prefix}
  # "upload" tells gcloud what files to upload (so that we can exclude unnecessary files - specifically, it will upload
  # the whole React build folder at "frontend/build".
  - url: /(.*\..*)$
    static_files: frontend/build/\1
    upload: frontend/build/.*$

    # BACKEND HANDLER
    # Python routes have the following pattern {domain}/{entity}/<optional_id_number>
    # React routes have the following pattern {domain}/{view}
    # This code routes anything matching the Python pattern to the API.
  - url: /.*
    script: auto